name: Build and Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        name: [backend, frontend]
    name: Build ${{ matrix.name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ matrix.name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: './${{ matrix.name }}/.nvmrc'

      - name: Run npm install
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.name }}
          if-no-files-found: error
          path: dist
          retention-days: 1

  merge:
    name: Merge Artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: build-output
          retention-days: 1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: merge
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      DIST_DIR: ${{ github.workspace }}/dist
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
      STAGE: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || '' }}
      TF_VAR_pages_branch: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}
      TF_STATE_POSTGRES_CONN_STR: ${{ secrets.TF_STATE_POSTGRES_CONN_STR }}
      VMETRICS_API_TOKEN: ${{ secrets.VMETRICS_API_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Get build artifact'
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: '${{ github.workspace }}/dist'

      - name: Deploy App
        env:
          GITHUB_APP_INSTALLATION_ID: ${{ secrets.TF_APP_INSTALLATION_ID }}
          GITHUB_APP_ID: ${{ secrets.TF_APP_ID }}
          GITHUB_APP_PEM_FILE: ${{ secrets.TF_APP_PEM_FILE }}
          GITHUB_OWNER: ${{ secrets.TF_APP_GITHUB_OWNER }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: '0.58.12'
          tofu_version: '1.7.1'
          tg_dir: 'deployment/modules/'
          tg_command: 'run-all apply'

      - name: Deploy Backend Output
        id: terraform-backend-output
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: '0.58.12'
          tofu_version: '1.7.1'
          tg_dir: 'deployment/modules/cloudflare/backend'
          tg_command: 'output -json'

      - name: Deploy Frontend Output
        id: terraform-frontend-output
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tg_version: '0.58.12'
          tofu_version: '1.7.1'
          tg_dir: 'deployment/modules/cloudflare/frontend'
          tg_command: 'output -json'

      - name: Output Cleaning
        id: clean
        run: |
          TG_BACKEND_OUT=$(echo '${{ steps.terraform-backend-output.outputs.tg_action_output }}' | sed 's|%0A|\n|g ; s|%3C|<|g' | jq -c .)
          TG_FRONTEND_OUT=$(echo '${{ steps.terraform-frontend-output.outputs.tg_action_output }}' | sed 's|%0A|\n|g ; s|%3C|<|g' | jq -c .)
          echo "backend=$TG_BACKEND_OUT" >> $GITHUB_OUTPUT
          echo "frontend=$TG_FRONTEND_OUT" >> $GITHUB_OUTPUT

      - name: Publish Frontend to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN_PAGES_UPLOAD }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ fromJson(steps.clean.outputs.frontend).pages_project_name.value }}
          directory: 'dist/frontend'
          branch: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name }}
          wranglerVersion: '3'

      - name: Comment
        uses: actions-cool/maintain-one-comment@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          number: ${{ github.event.number }}
          body: |
            ðŸš€ Preview deployed to:
            - Frontend URL: https://${{ fromJson(steps.clean.outputs.frontend).immich_app_branch_subdomain.value }}
            - Backend URL: ${{ fromJson(steps.clean.outputs.backend).data_api_url.value }}
          emojis: 'rocket'
          body-include: '<!-- web PR URL -->'
